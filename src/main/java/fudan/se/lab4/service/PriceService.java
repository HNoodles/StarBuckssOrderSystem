package fudan.se.lab4.service;

import fudan.se.lab4.entity.Drink;
import fudan.se.lab4.strategy.Strategy;

import java.util.List;
import java.util.Map;

public interface PriceService {
    /**
     * This method should use the parameter list of drinks as source,
     * and then calculate the total price of the drinks.
     * Finally, it should return the total price to order service
     *
     * @param drinks list of drinks generated by product service
     * @return total price
     */
    double getPriceByDrinks(List<Drink> drinks);

    /**
     * This method should use the parameter list of drinks as source.
     * Firstly, it should calculate the combination discount according to the count
     * of each combination (should be counted first).
     * Later, it should calculate the $XX off discount according to the price from
     * order service.
     * The above two steps can be done in SEPARATE methods.
     * Finally, which kind of discount to use should be decided, and corresponding
     * infos should be written into msgs, discountPrice should be returned.
     *
     * @param drinks list of drinks generated by product service
     * @param msgs   list of payment infos given by order service
     * @param price  original price given by order service
     * @return discount price
     */
    double getDiscountByOrder(List<Drink> drinks, List<String> msgs, List<String> logMsgs, double price, List<Strategy> strategies, String pattern);

    Map<String, List<Strategy>> getClassifiedStrategies(List<Strategy> strategies);
}
